{"version":3,"sources":["Login.js","Add.js","event.js","apiClient.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","state","disabled","e","preventDefault","this","setState","client","login","target","username","value","password","then","response","loggedIn","data","token","catch","alert","Navbar","bg","variant","expand","Brand","Container","Row","className","Col","onSubmit","submitHandler","Form","Control","type","name","placeholder","Button","React","Component","Add","result","currentAd","updateAd","_id","adName","location","date","price","addAd","console","log","document","getElementById","reset","refreshList","id","defaultValue","Event","ads","undefined","getAds","removeAd","ad","map","current","key","onClick","removeAdvert","updateAdvert","sm","Table","striped","bordered","hover","buildrows","url","ApiClient","tokenProvider","logoutHandler","axios","method","headers","authorization","error","status","Promise","reject","autheticatedCall","App","window","localStorage","getItem","logout","setItem","removeItem","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.348aeba3.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './App.css';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      disabled: false\r\n    }\r\n  }\r\n\r\n  submitHandler(e) {\r\n    e.preventDefault()\r\n    this.setState({ disabled: true })\r\n    this.props.client.login(e.target.username.value, e.target.password.value)\r\n      .then((response) => {\r\n        this.setState({ disabled: false })\r\n        this.props.loggedIn(response.data.token)\r\n      })\r\n      .catch(() => {\r\n        alert(\"an error occured, please try again\");\r\n        this.setState({ disabled: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar   bg=\"primary\" variant=\"dark\"   expand=\"md\">\r\n       <Navbar.Brand>Event App </Navbar.Brand>\r\n       </Navbar>\r\n       <Container>\r\n  <Row className=\"home\">\r\n    <Col>\r\n    <h2 className=\"Color\">Event App </h2><br/>\r\n    <h4 className=\"Color\">What?</h4>\r\n    <p> Event App is the world’s leading event technology platform trusted by over 50,000 event professionals in more than 50 countries.</p>\r\n    <p>Our community of customers includes top shows from across the world; amazing performing arts venues; global convention centers; some of the world’s most visited museums, professional sports arenas, and stadia; plus, other unique events and venues of all shapes and sizes.</p>\r\n    <p>Together, we can create extraordinary events.</p>\r\n\r\n\r\n    </Col>\r\n    <Col>\r\n    <h3 className=\"Color\">Login</h3> <br /><br />\r\n  <form onSubmit={(e) => this.submitHandler(e)} >\r\n       <p>Username</p> \r\n          <Form.Control type=\"text\" name=\"username\"  placeholder=\"Enter you name\"disabled={this.state.disabled} /><br />\r\n      <p>Password</p>\r\n          <Form.Control  type=\"password\" name=\"password\"  placeholder=\"Password\" disabled={this.state.disabled} /><br /><br />\r\n          <Button variant=\"primary\" type=\"submit\" disabled={this.state.disabled}> Submit </Button>\r\n        </form>\r\n    \r\n       </Col>\r\n        </Row>\r\n  \r\n\r\n</Container>\r\n\r\n     \r\n      </>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass Add extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      disabled: false,\r\n    }\r\n  }\r\n\r\n  submitHandler(e) {\r\n    e.preventDefault()\r\n    this.setState({ disabled: true })\r\n    let result\r\n    if (this.props.currentAd) {\r\n      result = this.props.client.updateAd(this.props.currentAd._id, e.target.adName.value, e.target.location.value, e.target.date.value, e.target.price.value )\r\n    } else {\r\n      result = this.props.client.addAd(e.target.adName.value, e.target.location.value, e.target.price.value,e.target.date.value)\r\n   \r\n    }\r\n    console.log(this.props.client.addAd)\r\n\r\n    result.then(() => {\r\n      this.setState({ disabled: false })\r\n      document.getElementById(\"addForm\").reset()\r\n      this.props.refreshList()\r\n    })\r\n      .catch(() => {\r\n        console.log(\"catch\")\r\n        alert(\"an error occured, please try again\");\r\n        this.setState({ disabled: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n<Container>\r\n     <h2 className=\"add\">  {this.props.currentAd ? \"Update\" : \"Add Event \"}</h2> <br />\r\n     \r\n        <form onSubmit={(e) => this.submitHandler(e)} id=\"addForm\" >\r\n          Name: <br />\r\n          <Form.Control   type=\"text\" defaultValue={this.props.currentAd?.name} name=\"adName\" disabled={this.state.disabled} /><br />\r\n          Location: <br />\r\n          <Form.Control  type=\"text\" defaultValue={this.props.currentAd?.location} name=\"location\" disabled={this.state.disabled} /><br />\r\n          \r\n          Price:<br />\r\n          <Form.Control   type=\"text\" defaultValue={this.props.currentAd?.price} name=\"price\" disabled={this.state.disabled} /><br />\r\n          Date: <br />\r\n          <Form.Control   type=\"text\" defaultValue={this.props.currentAd?.date} name=\"date\" disabled={this.state.disabled} /><br /><br/>\r\n          <Button type=\"submit\" disabled={this.state.disabled}> Submit </Button>\r\n        </form>\r\n        </Container>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Add;\r\n","import React from 'react';\r\nimport Add from \"./Add\"\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport './App.css';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nclass Event extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      ads: [],\r\n      currentAd: undefined\r\n    }\r\n  }\r\n\r\n  refreshList(){\r\n    this.props.client.getAds()\r\n    .then((response) => this.setState({ ads: response.data }))\r\n  }\r\n\r\n  removeAdvert(id){\r\n    this.props.client.removeAd(id)\r\n    .then(this.refreshList())\r\n  }\r\n\r\n  updateAdvert(ad){\r\n    this.setState({currentAd: ad})\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshList()\r\n  }\r\n\r\n  buildrows() {\r\n    return this.state.ads.map((current) => {\r\n      return (<tr key={current._id}>\r\n        <td>{current.name}</td>\r\n        <td>{current.location}</td>\r\n       \r\n        <td>£{current.price}</td>\r\n        <td>{current.date}</td>\r\n        \r\n        <td>\r\n          <Button onClick={()=> this.removeAdvert(current._id)}> remove</Button>{' '}\r\n          <Button onClick={()=> this.updateAdvert(current)}> update</Button>\r\n        </td>\r\n       \r\n      </tr>)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n       <Navbar   bg=\"primary\" variant=\"dark\"   expand=\"md\">\r\n       <Navbar.Brand>Event App </Navbar.Brand>\r\n       </Navbar>\r\n       <Row className=\"home\">\r\n       <Col sm={1}></Col>\r\n           <Col sm={3}>\r\n        <Add client={this.props.client} refreshList={() => {\r\n          this.refreshList()\r\n          this.setState({\r\n            currentAd: undefined})\r\n          }} \r\n          currentAd={this.state.currentAd}/>\r\n          </Col>\r\n          <Col sm={7}>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"Color\">  Name  </th>\r\n              <th className=\"Color\"> Location </th>\r\n              <th className=\"Color\">  Price  </th>\r\n              <th className=\"Color\">  Date  </th>\r\n             \r\n              <th className=\"Color\"> Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.buildrows()}\r\n          </tbody>\r\n        </Table>\r\n        <br /><br />\r\n        </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import axios from 'axios'\r\nconst url = 'https://event-ap.herokuapp.com/'\r\n\r\n//const url = 'http://localhost:3001/'\r\n\r\nexport class ApiClient {\r\n    constructor(tokenProvider, logoutHandler) {\r\n        this.tokenProvider = tokenProvider\r\n        this.logoutHandler = logoutHandler\r\n    }\r\n\r\n    async login(username, password) {\r\n        return await axios({\r\n            method: 'post',\r\n            url: `${url}auth`,\r\n            data: {\r\n                username,\r\n                password\r\n            }\r\n        });\r\n    }\r\n\r\n    autheticatedCall(method, url, data) {\r\n        return axios({\r\n                method,\r\n                url,\r\n                headers: {\r\n                    authorization: this.tokenProvider()\r\n                },\r\n                data\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 403) {\r\n                    this.logoutHandler();\r\n                    return Promise.reject()\r\n                } else {\r\n                    throw error;\r\n                }\r\n            })\r\n    }\r\n\r\n    getAds() {\r\n        return this.autheticatedCall('get', url)\r\n    }\r\n\r\n    addAd(name, location, price, date) {\r\n        return this.autheticatedCall('post', url, { name, location, price, date })\r\n    }\r\n\r\n    removeAd(id) {\r\n        return this.autheticatedCall('delete', `${url}${id}`)\r\n    }\r\n\r\n    updateAd(id, name, location, date, price) {\r\n        return this.autheticatedCall('put', `${url}${id}`, { name, location, price, date })\r\n    }\r\n\r\n}","import React from 'react';\nimport Login from './Login'\nimport Event from './event';\nimport { ApiClient } from './apiClient';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            token: window.localStorage.getItem(\"token\")\n        }\n        this.client = new ApiClient(() => this.state.token, () => this.logout())\n    }\n\n    login(token) {\n        window.localStorage.setItem(\"token\", token)\n        this.setState({ token })\n    }\n\n    logout() {\n        window.localStorage.removeItem(\"token\")\n        this.setState({ token: undefined })\n    }\n\n    render() {\n        if (this.state.token) {\n            return <Event client = { this.client }\n            />\n        }\n        return <Login loggedIn = {\n            (token) => this.login(token)\n        }\n        client = { this.client }\n        />\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}